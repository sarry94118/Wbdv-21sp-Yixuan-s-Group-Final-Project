{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/login:register/petfinder-project/src/components/table/pet-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport petService from \"../../services/pet-service\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport petsReducer from \"../../reducer/pet-reducer\";\n\nconst PostTable = ({\n  pets = [],\n  findPetForUser,\n  deletePet,\n  creatPet\n}) => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const [editing, setEditing] = useState(false);\n  const [updatePet, setUpdatePet] = useState(pets);\n  useEffect(() => {\n    findPetForUser(userId);\n    console.log(userId);\n  }, [userId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Post Table\"), JSON.stringify(updatePet), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"d-none d-sm-table-cell\",\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Breed\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"d-none d-md-table-cell\",\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Status\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), pets && pets.map(pet => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, pet.name), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"d-none d-sm-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, pet.breed), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"d-none d-md-table-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, pet.status))))));\n};\n\n_s(PostTable, \"6I3VGIDKz0Gf291ZXHhKikDvYmM=\", false, function () {\n  return [useParams];\n});\n\n_c = PostTable;\n\nconst stpm = state => ({\n  pets: state.petsReducer.pets\n});\n\nconst dtpm = dispatch => ({\n  findPetForUser: userId => {\n    petService.findPetForUser(userId).then(pets => dispatch({\n      type: \"FIND_PET\",\n      pets\n    }));\n  },\n  creatPet: (userId, pet) => {\n    petService.creatPet(userId, pet).then(pet => dispatch({\n      type: \"CREATE_PET\",\n      pet\n    }));\n  },\n  deletePet: petId => {\n    petService.deletePet(petId).then(status => dispatch({\n      type: \"DELETE_PET\",\n      petToDelete: petId\n    }));\n  },\n  updatePet: (petId, pet) => {\n    petService.updatePet(petId, pet).then(status => dispatch({\n      type: \"UPDATE_PET\",\n      pet: pet\n    }));\n  }\n});\n\nexport default connect(stpm, dtpm)(PostTable); // export default PostTable\n\nvar _c;\n\n$RefreshReg$(_c, \"PostTable\");","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/login:register/petfinder-project/src/components/table/pet-list.js"],"names":["React","useEffect","useState","Link","connect","petService","useParams","useHistory","petsReducer","PostTable","pets","findPetForUser","deletePet","creatPet","userId","editing","setEditing","updatePet","setUpdatePet","console","log","JSON","stringify","fontWeight","map","pet","name","breed","status","stpm","state","dtpm","dispatch","then","type","petId","petToDelete"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport petService from \"../../services/pet-service\"\nimport {useParams, useHistory} from \"react-router-dom\";\nimport petsReducer from \"../../reducer/pet-reducer\";\n\n\nconst PostTable =({\n                      pets=[],\n                      findPetForUser,\n                      deletePet,\n                      creatPet\n\n            }) =>{\n\n        const {userId} = useParams()\n        const [editing, setEditing] = useState(false)\n        const [updatePet, setUpdatePet] = useState(pets)\n\n\n        useEffect(() => {\n            findPetForUser(userId)\n            console.log(userId)\n\n        },[userId])\n\n\n        return(\n            <div>\n                <h1>Post Table</h1>\n                {JSON.stringify(updatePet)}\n                <table className=\"table table-striped\">\n                    <thead>\n\n                    <td style={{fontWeight: 'bold'}}>Name</td>\n                    <td className=\"d-none d-sm-table-cell\"  style={{fontWeight: 'bold'}}>Breed</td>\n                    <td className=\"d-none d-md-table-cell\"  style={{fontWeight: 'bold'}}>Status</td>\n\n                    </thead>\n\n                    <tbody>\n                    <tr>\n\n                    </tr>\n                    {\n                        pets && pets.map(pet =>\n                        <tr>\n                            <td scope=\"col\">{pet.name}</td>\n                            <td className=\"d-none d-sm-table-cell\">{pet.breed}</td>\n                            <td className=\"d-none d-md-table-cell\">{pet.status}</td>\n                            {/*{*/}\n                            {/*    !editing &&*/}\n                            {/*    <>*/}\n                            {/*        /!*<Link className=\"nav-link\" to={to}>*!/*/}\n                            {/*        /!*    {item.title}*!/*/}\n                            {/*        /!*</Link>*!/*/}\n                            {/*        <Link className={`nav-link ${active?'active':''}`} to={to}>*/}\n                            {/*            {item.title}*/}\n                            {/*        </Link>*/}\n                            {/*        <i onClick={() => setEditing(true)} className=\"fas fa-edit\"></i>*/}\n                            {/*    </>*/}\n                            {/*}*/}\n                            {/*{*/}\n                            {/*    editing &&*/}\n                            {/*    <>*/}\n                            {/*        <input*/}\n                            {/*            onChange={(e) =>*/}\n                            {/*                setCachedItem({*/}\n                            {/*                    ...cachedItem,*/}\n                            {/*                    title:e.target.value*/}\n                            {/*                })}*/}\n                            {/*            value={cachedItem.title}/>*/}\n                            {/*        <i onClick={() => {*/}\n                            {/*            setEditing(false)*/}\n                            {/*            updateItem(cachedItem)*/}\n                            {/*        }} className=\"fas fa-check\"></i>*/}\n                            {/*        <i onClick={() => deleteItem(item)} className=\"fas fa-times\"></i>*/}\n                            {/*    </>*/}\n                            {/*}*/}\n                        </tr>\n                        )\n                    }\n\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">*/}\n                    {/*        <Link to=\"/post/grid\">*/}\n                    {/*        Found Corgi(Almond color) at Church*/}\n                    {/*        </Link>*/}\n                    {/*    </th>*/}\n                    {/*    <td>Mark</td>*/}\n                    {/*    <td>01/18/2021</td>*/}\n                    {/*    <td><i className=\"fas fa-edit\"></i></td>*/}\n                    {/*</tr>*/}\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">Missing Pet</th>*/}\n                    {/*    <td>Jacob</td>*/}\n                    {/*    <td>01/18/2021</td>*/}\n                    {/*    <td><i className=\"fas fa-edit\"></i></td>*/}\n                    {/*</tr>*/}\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">2yr dog looking for home</th>*/}\n                    {/*    <td>Larry</td>*/}\n                    {/*    <td>01/18/2021</td>*/}\n                    {/*    <td><i className=\"fas fa-edit\"></i></td>*/}\n                    {/*</tr>*/}\n\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">White Chiwawa Looking for home</th>*/}\n                    {/*    <td>Sarry</td>*/}\n                    {/*    <td>01/18/2021</td>*/}\n                    {/*    <td><i className=\"fas fa-edit\"></i></td>*/}\n                    {/*</tr>*/}\n\n\n                    {/*<CourseRow title=\"CS5610\" owner=\"me\"/>*/}\n                    {/*<CourseRow title=\"CS4610\" owner=\"you\"/>*/}\n                    {/*<CourseRow title=\"CS3610\" owner=\"him\"/>*/}\n                    {/*<CourseRow title=\"CS2610\" owner=\"she\"/>*/}\n                    {/*{*/}\n                    {/*    this.props.course.map((course,ndx) =>*/}\n                    {/*        <PostRow*/}\n                    {/*            updateCourse={this.props.updateCourse}*/}\n                    {/*            deleteCourse={this.props.deleteCourse}*/}\n                    {/*            key = {ndx}*/}\n                    {/*            course={course}*/}\n                    {/*            title={course.title}*/}\n                    {/*            lastModified={course.lastModified}*/}\n                    {/*            owner={course.owner}/>)*/}\n                    {/*}*/}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\nconst stpm = (state) =>({\n\n    pets: state.petsReducer.pets\n})\n\nconst dtpm = (dispatch) =>({\n\n    findPetForUser: (userId) => {\n        petService.findPetForUser(userId)\n            .then(pets => dispatch({\n                type: \"FIND_PET\",\n                pets\n            }))\n    },\n\n    creatPet: (userId, pet) => {\n        petService.creatPet(userId, pet)\n            .then(pet => dispatch ({\n                type: \"CREATE_PET\",\n                pet\n            }))\n    },\n    deletePet: (petId) => {\n        petService.deletePet(petId)\n            .then(status => dispatch({\n                type: \"DELETE_PET\",\n                petToDelete: petId\n            }))\n    },\n\n    updatePet: (petId, pet) => {\n        petService.updatePet(petId, pet)\n            .then(status => dispatch({\n                type: \"UPDATE_PET\",\n                pet: pet\n            }))\n    },\n\n})\n\nexport default connect(stpm, dtpm)(PostTable)\n\n// export default PostTable"]},"metadata":{},"sourceType":"module"}