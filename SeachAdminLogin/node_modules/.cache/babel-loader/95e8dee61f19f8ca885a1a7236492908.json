{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/login:register/petfinder-project/src/components/user-management.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from \"./login/login\";\nimport Profile from \"./login/profile\";\nimport Register from \"./login/register\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport userService from \"../services/user-service\";\nimport ResetPassword from \"./login/ResetPassword\";\n\nconst UserManagement = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    findAllUsers();\n    console.log(users);\n  }, []);\n\n  const findAllUsers = () => {\n    userService.findAllUsers().then(users => setUsers(users));\n  };\n\n  const findUserForUsername = user => {\n    userService.findUserForUsername(user.username).then(newUser => {\n      setUser(newUser);\n      console.log(newUser);\n    });\n  };\n\n  const addUser = user => {\n    userService.createUser(user.username, user).then(user => {\n      setUsers({\n        users: [...users, user]\n      });\n      console.log(users);\n    });\n  };\n\n  const updateUser = (userId, user) => {\n    userService.updateUser(userId, user).then(status => {\n      users.map(newuser => newuser.userId !== user.userId ? newuser : user);\n      console.log(user);\n    });\n  };\n\n  const resetUser = newuser => {\n    userService.findUserForUsername(newuser);\n    console.log(\"new\");\n    console.log(user);\n    updateUser(user.userId, user);\n    console.log(\"final\");\n    console.log(user);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    findUserForUsername: findUserForUsername,\n    updateUser: updateUser,\n    users: users,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    findUserForUsername: findUserForUsername,\n    updateUser: updateUser,\n    users: users,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    addUser: addUser,\n    users: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/profile\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    findUserForUsername: findUserForUsername,\n    updateUser: updateUser,\n    user: user[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reset\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ResetPassword, {\n    findUserForUsername: findUserForUsername,\n    resetUser: resetUser,\n    user: user[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  })));\n};\n\n_s(UserManagement, \"UWkwifRx+VwqYaaBtumvp+ZY09w=\");\n\n_c = UserManagement;\nexport default UserManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/login:register/petfinder-project/src/components/user-management.js"],"names":["React","useState","useEffect","Login","Profile","Register","BrowserRouter","Router","Link","Route","Switch","userService","ResetPassword","UserManagement","user","setUser","users","setUsers","findAllUsers","console","log","then","findUserForUsername","username","newUser","addUser","createUser","updateUser","userId","status","map","newuser","resetUser"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Login from \"./login/login\"\nimport Profile from \"./login/profile\"\nimport Register from \"./login/register\"\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport userService from \"../services/user-service\";\nimport ResetPassword from \"./login/ResetPassword\";\n\n\n\nconst UserManagement =() => {\n\n    const [user, setUser] = useState({})\n    const [users, setUsers] = useState([])\n\n\n\n     useEffect(() => {\n        findAllUsers()\n        console.log(users)\n    }, [])\n\n\n    const findAllUsers = () =>{\n        userService.findAllUsers()\n            .then(users => setUsers(users))\n    }\n\n    const findUserForUsername =(user) => {\n        userService.findUserForUsername(user.username)\n            .then((newUser) => {\n                setUser(newUser)\n                console.log(newUser)})\n\n    }\n\n\n    const addUser=(user) => {\n\n        userService.createUser(user.username,user)\n            .then(user => {setUsers({\n                    users: [\n                        ...users,\n                        user\n                    ]\n                })\n            console.log(users)})\n    }\n\n\n\n    const updateUser = (userId, user) => {\n        userService.updateUser(userId, user)\n            .then((status) =>{users.map(newuser => newuser.userId !== user.userId ? newuser : user)\n                console.log(user)})\n\n    }\n\n    const resetUser = (newuser) => {\n        userService.findUserForUsername(newuser)\n        console.log(\"new\")\n        console.log(user)\n        updateUser(user.userId, user)\n        console.log(\"final\")\n        console.log(user)\n\n    }\n\n\n    return (\n\n                <div>\n\n                <Route path=\"/\" exact={true}>\n                    <Login\n                        findUserForUsername = {findUserForUsername}\n                        updateUser = {updateUser}\n                        users={users}\n                        user = {user}/>\n                </Route>\n\n\n                <Route path=\"/login\" exact={true}>\n                    <Login\n\n                        findUserForUsername = {findUserForUsername}\n                        updateUser = {updateUser}\n                        users={users}\n                        user = {user}\n                        />\n                </Route>\n                <Route path=\"/register\" exact={true}>\n                    <Register\n                        addUser = {addUser}\n                        users={user} />\n                </Route>\n                <Route path=\"/profile\" exact={true}>\n                    <Profile\n                        findUserForUsername = {findUserForUsername}\n                        updateUser={updateUser}\n                        user={user[0]} />\n\n                </Route>\n                <Route path=\"/reset\" exact={true}>\n                    <ResetPassword\n                        findUserForUsername = {findUserForUsername}\n                        resetUser={resetUser}\n                        user={user[0]} />\n\n                </Route>\n                {/*<Route path=\"/\" exact={true}>*/}\n                {/*    <Login*/}\n                {/*        />*/}\n                {/*</Route>*/}\n\n\n                {/*<Route path=\"/login\" exact={true}>*/}\n                {/*    <Login*/}\n                {/*        />*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/register\" exact={true}>*/}\n                {/*    <Register*/}\n                {/*       />*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/profile\" exact={true}>*/}\n                {/*    <Profile*/}\n                {/*       />*/}\n                {/*</Route>*/}\n\n\n\n\n            </div>\n        )\n\n\n\n}\n\n\nexport default UserManagement"]},"metadata":{},"sourceType":"module"}