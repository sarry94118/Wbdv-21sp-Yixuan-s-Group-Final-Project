{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/users\"; // const API_URL = \"https://petfinderserver.herokuapp.com/api/users\";\n\nexport const findAllUsers = () => fetch(API_URL).then(response => response.json());\nexport const createUser = (username, user) => fetch(`${API_URL}/username/${username}`, {\n  method: 'POST',\n  body: JSON.stringify(user),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const deleteUser = uid => fetch(`${API_URL}/${uid}`, {\n  method: 'DELETE'\n}).then(response => response.json());\nexport const updateUser = (uid, user) => fetch(`${API_URL}/userid/${uid}`, {\n  method: 'PUT',\n  credentials: 'same-origin',\n  body: JSON.stringify(user),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json()); // @GetMapping(\"/api/users/username/{user}\")\n\nexport const findUserForUsername = username => fetch(`${API_URL}/username/${username}`).then(response => response.json()); //added by Meng Wang\n// api/users/register\n\nconst register = credentials => {\n  console.log(\"user service register\");\n  console.log(JSON.stringify(credentials));\n  return fetch(`${API_URL}/register`, {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify(credentials),\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(response => response.json());\n};\n\nexport default {\n  createUser,\n  deleteUser,\n  updateUser,\n  findUserForUsername,\n  findAllUsers,\n  register\n};","map":{"version":3,"sources":["/Users/meng/Development/Wbdv-21sp-Yixuan-s-Group-Final-Project/Search and Login Page/src/services/user-service.js"],"names":["axios","API_URL","findAllUsers","fetch","then","response","json","createUser","username","user","method","body","JSON","stringify","headers","deleteUser","uid","updateUser","credentials","findUserForUsername","register","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,iCAAhB,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,MACxBC,KAAK,CAACF,OAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIP,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,IAAX,KACtBN,KAAK,CAAE,GAAEF,OAAQ,aAAYO,QAAS,EAAjC,EAAoC;AACrCE,EAAAA,MAAM,EAAE,MAD6B;AAErCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF+B;AAGrCK,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AAH6B,CAApC,CAAL,CAOKV,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,CADG;AAUP,OAAO,MAAMS,UAAU,GAAIC,GAAD,IACtBb,KAAK,CAAE,GAAEF,OAAQ,IAAGe,GAAI,EAAnB,EAAsB;AACvBN,EAAAA,MAAM,EAAC;AADgB,CAAtB,CAAL,CAGKN,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,CADG;AAOP,OAAO,MAAMW,UAAU,GAAG,CAACD,GAAD,EAAMP,IAAN,KACtBN,KAAK,CAAE,GAAEF,OAAQ,WAAUe,GAAI,EAA1B,EAA6B;AAC9BN,EAAAA,MAAM,EAAE,KADsB;AAE9BQ,EAAAA,WAAW,EAAE,aAFiB;AAG9BP,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAHwB;AAI9BK,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AAJsB,CAA7B,CAAL,CAQKV,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,CADG,C,CAWP;;AACA,OAAO,MAAMa,mBAAmB,GAAGX,QAAD,IAC9BL,KAAK,CAAE,GAAEF,OAAQ,aAAYO,QAAS,EAAjC,CAAL,CACKJ,IADL,CACUC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADrB,CADG,C,CAIP;AACA;;AACA,MAAMc,QAAQ,GAAIF,WAAD,IAAiB;AAC9BG,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACC,SAAL,CAAeK,WAAf,CAAZ;AACA,SAAOf,KAAK,CAAE,GAAEF,OAAQ,WAAZ,EAAwB;AAChCS,IAAAA,MAAM,EAAE,MADwB;AAEhCQ,IAAAA,WAAW,EAAE,SAFmB;AAGhCP,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,WAAf,CAH0B;AAIhCJ,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAJuB,GAAxB,CAAL,CAQFV,IARE,CAQGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARf,CAAP;AASH,CAZD;;AAgBA,eAAe;AACXC,EAAAA,UADW;AAEXQ,EAAAA,UAFW;AAGXE,EAAAA,UAHW;AAIXE,EAAAA,mBAJW;AAKXjB,EAAAA,YALW;AAMXkB,EAAAA;AANW,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/users\";\n// const API_URL = \"https://petfinderserver.herokuapp.com/api/users\";\n\nexport const findAllUsers = () =>\n    fetch(API_URL)\n        .then(response => response.json())\n\nexport const createUser = (username, user) =>\n    fetch(`${API_URL}/username/${username}`, {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers:{\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const deleteUser = (uid) =>\n    fetch(`${API_URL}/${uid}`, {\n        method:'DELETE',\n    })\n        .then(response => response.json())\n\n\nexport const updateUser = (uid, user) =>\n    fetch(`${API_URL}/userid/${uid}`, {\n        method: 'PUT',\n        credentials: 'same-origin',\n        body: JSON.stringify(user),\n        headers:{\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\n// @GetMapping(\"/api/users/username/{user}\")\nexport const findUserForUsername= (username) =>\n    fetch(`${API_URL}/username/${username}`)\n        .then(response =>response.json())\n\n//added by Meng Wang\n// api/users/register\nconst register = (credentials) => {\n    console.log(\"user service register\")\n    console.log(JSON.stringify(credentials))\n    return fetch(`${API_URL}/register`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify(credentials),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n}\n\n\n\nexport default {\n    createUser,\n    deleteUser,\n    updateUser,\n    findUserForUsername,\n    findAllUsers,\n    register\n};"]},"metadata":{},"sourceType":"module"}