{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/meng2/Wbdv-21sp-Yixuan-s-Group-Final-Project/SeachAdminLogin/src/components/table/pet-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport petService from \"../../services/pet-service\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from 'react-router';\nimport petsReducer from \"../../reducer/pet-reducer\";\nimport PetCard from \"../grid/pet-card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostTable = ({\n  pets = [],\n  findPetForUser,\n  deletePet,\n  createPet,\n  updatePet\n}) => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const history = useHistory();\n  const [editing, setEditing] = useState(false);\n  const [updatePets, setUpdatePets] = useState(pets);\n\n  const refreshPage = () => {\n    history.go(0);\n  };\n\n  useEffect(() => {\n    findPetForUser(userId);\n    setUpdatePets(pets);\n    console.log(userId);\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        history.goBack();\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-plus-circle float-right fa-2x\",\n      onClick: () => createPet(userId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Post Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"d-none d-sm-table-cell\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Breed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"d-none d-md-table-cell\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pets && pets.map(pet => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            scope: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/petlist/post/card/${pet.petId}`,\n              children: pet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"d-none d-sm-table-cell\",\n            children: pet.breed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"d-none d-md-table-cell\",\n            children: pet.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-trash\",\n            onClick: () => {\n              deletePet(pet.petId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n};\n\n_s(PostTable, \"3COe8oOLHwT1RoO2jl5DA03pvZI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = PostTable;\n\nconst stpm = state => ({\n  pets: state.petsReducer.pets\n});\n\nconst dtpm = dispatch => ({\n  findPetForUser: userId => {\n    petService.findPetForUser(userId).then(pets => dispatch({\n      type: \"FIND_PET\",\n      pets\n    }));\n  },\n  createPet: userId => {\n    petService.createPet(userId, {\n      name: \"new pet\",\n      breed: \"new breed\",\n      status: \"current status\"\n    }).then(pet => dispatch({\n      type: \"CREATE_PET\",\n      pet\n    }));\n  },\n  deletePet: petId => {\n    petService.deletePet(petId).then(status => dispatch({\n      type: \"DELETE_PET\",\n      petToDelete: petId\n    }));\n  },\n  updatePet: (petId, pet) => {\n    petService.updatePet(petId, pet).then(status => dispatch({\n      type: \"UPDATE_PET\",\n      pet: pet\n    }));\n  },\n  findPetForId: petId => {\n    // petService.findPetForId(petId)\n    //     .then(pet => dispatch({\n    //         type: \"FIND_PET_FOR_PETID\",\n    //         pet: pet\n    //     }))\n    petService.findPetForId(petId).then(pet => {});\n  }\n});\n\nexport default connect(stpm, dtpm)(PostTable); // export default PostTable\n\nvar _c;\n\n$RefreshReg$(_c, \"PostTable\");","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/meng2/Wbdv-21sp-Yixuan-s-Group-Final-Project/SeachAdminLogin/src/components/table/pet-list.js"],"names":["React","useEffect","useState","Link","connect","petService","useParams","useHistory","petsReducer","PetCard","PostTable","pets","findPetForUser","deletePet","createPet","updatePet","userId","history","editing","setEditing","updatePets","setUpdatePets","refreshPage","go","console","log","goBack","fontWeight","map","pet","petId","name","breed","status","stpm","state","dtpm","dispatch","then","type","petToDelete","findPetForId"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport petService from \"../../services/pet-service\"\nimport {useParams} from \"react-router-dom\";\nimport { useHistory } from 'react-router'\nimport petsReducer from \"../../reducer/pet-reducer\";\nimport PetCard from \"../grid/pet-card\";\n\n\nconst PostTable =({\n                      pets=[],\n                      findPetForUser,\n                      deletePet,\n                      createPet,\n                      updatePet,\n\n            }) =>{\n\n        const {userId} = useParams()\n        const history = useHistory()\n        const [editing, setEditing] = useState(false)\n        const [updatePets, setUpdatePets] = useState(pets)\n\n        const refreshPage = () =>{\n\n            history.go(0)\n        }\n\n\n        useEffect(() => {\n            findPetForUser(userId)\n            setUpdatePets(pets)\n            console.log(userId)\n\n        },[userId])\n\n\n        return(\n            <div>\n                {/*{JSON.stringify(pets)}*/}\n                <button onClick={() => {\n                    history.goBack()\n                }}>Back\n                </button>\n\n                {/*<button onClick={() => refreshPage()}>refresh to see update</button>*/}\n                <i className=\"fas fa-plus-circle float-right fa-2x\"\n                    onClick={()=>\n                        createPet(userId)}></i>\n                <h1>Post Table</h1>\n\n\n                <table className=\"table table-striped\">\n                    <thead>\n                    <td style={{fontWeight: 'bold'}}>Name</td>\n                    <td className=\"d-none d-sm-table-cell\"  style={{fontWeight: 'bold'}}>Breed</td>\n                    <td className=\"d-none d-md-table-cell\"  style={{fontWeight: 'bold'}}>Status</td>\n\n                    </thead>\n\n                    <tbody>\n\n                    {\n                        pets && pets.map(pet =>\n                        <tr>\n                            {/*<Link to={`/petlist/post/card/${pet.petId}`}>*/}\n                            <td scope=\"col\">\n                                <Link to={`/petlist/post/card/${pet.petId}`}>\n                                    {pet.name}\n                                </Link>\n                            </td>\n                                {/*<Link/>*/}\n\n                            <td className=\"d-none d-sm-table-cell\">{pet.breed}</td>\n                            <td className=\"d-none d-md-table-cell\">{pet.status}</td>\n                            <i className=\"fas fa-trash\"\n                               onClick={()=>\n                               {deletePet(pet.petId)}}></i>\n                        </tr>\n                        )\n                    }\n\n\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\nconst stpm = (state) =>({\n\n    pets: state.petsReducer.pets\n})\n\nconst dtpm = (dispatch) =>({\n\n    findPetForUser: (userId) => {\n        petService.findPetForUser(userId)\n            .then(pets => dispatch({\n                type: \"FIND_PET\",\n                pets\n            }))\n    },\n\n    createPet: (userId) => {\n        petService.createPet(userId, {name:\"new pet\", breed:\"new breed\", status:\"current status\"})\n            .then(pet => dispatch ({\n                type: \"CREATE_PET\",\n                pet\n            }))\n    },\n\n    deletePet: (petId) => {\n        petService.deletePet(petId)\n            .then(status => dispatch({\n                type: \"DELETE_PET\",\n                petToDelete: petId\n            }))\n    },\n\n    updatePet: (petId, pet) => {\n        petService.updatePet(petId, pet)\n            .then(status => dispatch({\n                type: \"UPDATE_PET\",\n                pet: pet\n            }))\n    },\n\n    findPetForId:(petId) => {\n        // petService.findPetForId(petId)\n        //     .then(pet => dispatch({\n        //         type: \"FIND_PET_FOR_PETID\",\n        //         pet: pet\n        //     }))\n        petService.findPetForId(petId)\n            .then(pet => {\n\n            })\n    }\n\n})\n\nexport default connect(stpm, dtpm)(PostTable)\n\n// export default PostTable"]},"metadata":{},"sourceType":"module"}