{"ast":null,"code":"var _jsxFileName = \"/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/login:register/petfinder-project/src/components/user-management.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from \"./login/login\";\nimport Profile from \"./login/profile\";\nimport Register from \"./login/register\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport userService from \"../services/user-service\";\n\nconst UserManagement = () => {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    findAllUsers();\n    console.log(users);\n  }, []);\n\n  const findAllUsers = () => {\n    userService.findAllUsers().then(users => setUsers(users));\n  };\n\n  const findUserForUsername = user => {\n    userService.findUserForUsername(user.username).then(newUser => {\n      setUser(newUser);\n      console.log(newUser);\n    });\n  };\n\n  const addUser = user => {\n    userService.createUser(user).then(user => this.setState(prevState => ({ ...prevState,\n      users: [...prevState.users, user]\n    })));\n  };\n\n  const deleteUser = courseToDelete => {\n    userService.deleteUser(courseToDelete.userId).then(status => {\n      this.setState(prevState => {\n        let nextState = { ...prevState,\n          users: prevState.users.filter(user => user !== courseToDelete)\n        };\n        return nextState;\n      });\n    });\n  };\n\n  const updateUser = user => {\n    userService.updateUser(user.userId, user).then(status => this.setState(prevState => ({ ...prevState,\n      users: prevState.users.map(c => c.userId === user.userId ? user : c)\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    findUserForUsername: findUserForUsername,\n    updateUser: updateUser,\n    users: users,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    findUserForUsername: findUserForUsername,\n    updateUser: updateUser,\n    users: users,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    updateUser: updateUser,\n    deleteUser: deleteUser,\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/profile\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })));\n};\n\n_s(UserManagement, \"omO3J4/sqG8n11EhtYPFijTeqKg=\");\n\n_c = UserManagement;\nexport default UserManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"sources":["/Users/yixuanliao/sarry94118/2021/spring/02/petfinder/login:register/petfinder-project/src/components/user-management.js"],"names":["React","useState","useEffect","Login","Profile","Register","BrowserRouter","Router","Link","Route","Switch","userService","UserManagement","user","setUser","users","setUsers","findAllUsers","console","log","then","findUserForUsername","username","newUser","addUser","createUser","setState","prevState","deleteUser","courseToDelete","userId","status","nextState","filter","updateUser","map","c"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Login from \"./login/login\"\nimport Profile from \"./login/profile\"\nimport Register from \"./login/register\"\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport userService from \"../services/user-service\";\n\n\n\nconst UserManagement =() => {\n\n    const [user, setUser] = useState([])\n    const [users, setUsers] = useState([])\n\n\n\n     useEffect(() => {\n        findAllUsers()\n        console.log(users)\n    }, [])\n\n\n    const findAllUsers = () =>{\n        userService.findAllUsers()\n            .then(users => setUsers(users))\n    }\n\n    const findUserForUsername =(user) => {\n        userService.findUserForUsername(user.username)\n            .then((newUser) => {\n                setUser(newUser)\n                console.log(newUser)})\n\n    }\n\n\n    const addUser=(user) => {\n\n        userService.createUser(user)\n            .then(user =>this.setState(\n                (prevState) => ({\n                    ...prevState,\n                    users: [\n                        ...prevState.users,\n                        user\n                    ]\n                })))\n    }\n\n\n\n\n\n    const deleteUser = (courseToDelete) => {\n        userService.deleteUser(courseToDelete.userId)\n            .then(status => {\n                this.setState((prevState) =>{\n                    let nextState = {\n                        ...prevState,\n                        users:  prevState\n                            .users\n                            .filter(user => user !== courseToDelete)\n                    }\n\n                    return nextState\n                })\n            })\n    }\n\n    const updateUser = (user) => {\n        userService.updateUser(user.userId, user)\n            .then(status => this.setState((prevState) =>({\n                ...prevState,\n                users: prevState.users.map(\n                    c =>c.userId === user.userId ? user : c)\n            })))\n\n    }\n\n        return (\n\n                <div>\n\n                <Route path=\"/\" exact={true}>\n                    <Login\n                        findUserForUsername = {findUserForUsername}\n                        updateUser = {updateUser}\n                        users={users}\n                        user = {user}/>\n                </Route>\n\n\n                <Route path=\"/login\" exact={true}>\n                    <Login\n\n                        findUserForUsername = {findUserForUsername}\n                        updateUser = {updateUser}\n                        users={users}\n                        user = {user}\n                        />\n                </Route>\n                <Route path=\"/register\" exact={true}>\n                    <Register\n                        updateUser = {updateUser}\n                        deleteUser={deleteUser}\n                        users={users} />\n                </Route>\n                <Route path=\"/profile\" exact={true}>\n                    <Profile/>\n                      \n                </Route>\n                {/*<Route path=\"/\" exact={true}>*/}\n                {/*    <Login*/}\n                {/*        />*/}\n                {/*</Route>*/}\n\n\n                {/*<Route path=\"/login\" exact={true}>*/}\n                {/*    <Login*/}\n                {/*        />*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/register\" exact={true}>*/}\n                {/*    <Register*/}\n                {/*       />*/}\n                {/*</Route>*/}\n                {/*<Route path=\"/profile\" exact={true}>*/}\n                {/*    <Profile*/}\n                {/*       />*/}\n                {/*</Route>*/}\n\n\n\n\n            </div>\n        )\n\n\n\n}\n\n\nexport default UserManagement"]},"metadata":{},"sourceType":"module"}