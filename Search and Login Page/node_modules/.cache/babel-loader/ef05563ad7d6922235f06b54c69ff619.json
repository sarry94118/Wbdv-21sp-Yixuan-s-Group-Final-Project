{"ast":null,"code":"var _jsxFileName = \"/Users/meng/Development/Wbdv-21sp-Yixuan-s-Group-Final-Project/Search and Login Page/src/components/user-management.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from \"./login/login\";\nimport Profile from \"./login/profile\";\nimport Register from \"./login/register\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport userService from \"../services/user-service\";\nimport ResetPassword from \"./login/ResetPassword\";\nimport Admin from \"./admin/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagement = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]); // const [serverUser, setServerUser] = useState({username:\"\", password:\"\"})\n\n  useEffect(() => {\n    findAllUsers();\n    console.log(users);\n    userService.profile().then(user => {\n      console.log(\"usermanagement user=\" + user.username);\n      setUser(user);\n    });\n  }, []);\n\n  const findAllUsers = () => {\n    userService.findAllUsers().then(users => setUsers(users));\n  };\n\n  const findUserForUsername = uuser => {\n    userService.findUserForUsername(uuser.username).then(newUser => {\n      setUser(newUser);\n      console.log(\"finduser\");\n      console.log(user);\n    });\n  }; // deleted by Meng Wang\n  // const addUser=(user) => {\n  //\n  //     userService.createUser(user.username,user)\n  //         .then(user => {setUsers({\n  //                 users: [\n  //                     ...users,\n  //                     user\n  //                 ]\n  //             })\n  //         // console.log(\"creatuser\")\n  //         console.log(users)})\n  // }\n  // ===============end====================\n\n\n  const updateUser = (userId, user) => {\n    userService.updateUser(userId, user).then(status => {\n      users.map(newuser => newuser.userId !== user.userId ? newuser : user);\n      console.log(\"updateuser\");\n      console.log(user);\n    });\n  };\n\n  const resetUser = resetuser => {\n    userService.findUserForUsername(resetuser.username).then(mapuser => {\n      updateUser(mapuser.userId, { ...resetuser,\n        userId: mapuser.userId,\n        userType: mapuser.userType\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        findUserForUsername: findUserForUsername,\n        updateUser: updateUser,\n        users: users,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        findUserForUsername: findUserForUsername,\n        updateUser: updateUser,\n        users: users,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile/:userId\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        findUserForUsername: findUserForUsername,\n        updateUser: updateUser,\n        user: user,\n        show: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/reset\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(ResetPassword, {\n        findUserForUsername: findUserForUsername,\n        resetUser: resetUser,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: [\"/admin\", \"/admin/:label\"],\n      exact: true,\n      component: Admin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 17\n  }, this);\n};\n\n_s(UserManagement, \"UWkwifRx+VwqYaaBtumvp+ZY09w=\");\n\n_c = UserManagement;\nexport default UserManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"sources":["/Users/meng/Development/Wbdv-21sp-Yixuan-s-Group-Final-Project/Search and Login Page/src/components/user-management.js"],"names":["React","useState","useEffect","Login","Profile","Register","BrowserRouter","Router","Link","Route","Switch","userService","ResetPassword","Admin","UserManagement","user","setUser","users","setUsers","findAllUsers","console","log","profile","then","username","findUserForUsername","uuser","newUser","updateUser","userId","status","map","newuser","resetUser","resetuser","mapuser","userType"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Login from \"./login/login\"\nimport Profile from \"./login/profile\"\nimport Register from \"./login/register\"\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\nimport userService from \"../services/user-service\";\nimport ResetPassword from \"./login/ResetPassword\";\nimport Admin from \"./admin/admin\";\n\n\n\nconst UserManagement =() => {\n\n    const [user, setUser] = useState({})\n    const [users, setUsers] = useState([])\n    // const [serverUser, setServerUser] = useState({username:\"\", password:\"\"})\n\n\n\n     useEffect(() => {\n        findAllUsers()\n        console.log(users)\n         userService.profile().then(user => {\n             console.log(\"usermanagement user=\" + user.username)\n             setUser(user)\n         })\n    }, [])\n\n\n    const findAllUsers = () =>{\n        userService.findAllUsers()\n            .then(users => setUsers(users))\n    }\n\n    const findUserForUsername =(uuser) => {\n        userService.findUserForUsername(uuser.username)\n            .then((newUser) => {\n                setUser(newUser)\n                console.log(\"finduser\")\n                console.log(user)})\n\n    }\n\n\n    // deleted by Meng Wang\n    // const addUser=(user) => {\n    //\n    //     userService.createUser(user.username,user)\n    //         .then(user => {setUsers({\n    //                 users: [\n    //                     ...users,\n    //                     user\n    //                 ]\n    //             })\n    //         // console.log(\"creatuser\")\n    //         console.log(users)})\n    // }\n    // ===============end====================\n\n\n\n    const updateUser = (userId, user) => {\n        userService.updateUser(userId, user)\n            .then((status) =>{users.map(newuser => newuser.userId !== user.userId ? newuser : user)\n                console.log(\"updateuser\")\n                console.log(user)})\n\n    }\n\n    const resetUser = (resetuser) => {\n        userService.findUserForUsername(resetuser.username)\n            .then(mapuser=> {updateUser(mapuser.userId, {...resetuser, userId:mapuser.userId, userType:mapuser.userType})\n\n    })}\n\n\n    return (\n\n                <div>\n\n                <Route path=\"/\" exact={true}>\n                    <Login\n                        findUserForUsername = {findUserForUsername}\n                        updateUser = {updateUser}\n                        users={users}\n                        user = {user}/>\n                </Route>\n\n\n                <Route path=\"/login\" exact={true}>\n                    <Login\n\n                        findUserForUsername = {findUserForUsername}\n                        updateUser = {updateUser}\n                        users={users}\n                        user = {user}\n                        />\n                </Route>\n                <Route path=\"/register\" exact={true}>\n                    {/*<Register*/}\n                    {/*    addUser = {addUser}*/}\n                    {/*    users={user} />*/}\n                    <Register />\n                </Route>\n                <Route path=\"/profile/:userId\" exact={true}>\n                    <Profile\n                        findUserForUsername = {findUserForUsername}\n                        updateUser={updateUser}\n                        user={user}\n                        show = {true}\n                      />\n\n                </Route>\n                <Route path=\"/reset\" exact={true}>\n                    <ResetPassword\n                        findUserForUsername = {findUserForUsername}\n                        resetUser={resetUser}\n                        user={user} />\n\n                </Route>\n                 {/*added by Meng Wang*/}\n                 {/*这里的label是为了区分显示user list和pet list*/}\n                <Route\n                    path={[\"/admin\", \"/admin/:label\"]}\n                    exact={true}\n                    component={Admin}>\n                </Route>\n\n\n\n\n            </div>\n        )\n\n\n\n}\n\nexport default UserManagement"]},"metadata":{},"sourceType":"module"}