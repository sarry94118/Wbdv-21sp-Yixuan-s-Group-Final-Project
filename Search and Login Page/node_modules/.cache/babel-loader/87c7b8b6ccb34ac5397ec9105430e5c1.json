{"ast":null,"code":"// const USER_URL=\"https://petfinderserver.herokuapp.com/api/users\"\nconst USER_URL = \"http://localhost:8080/api/users\";\n\nconst findAllUsers = () => {\n  return fetch(USER_URL).then(res => res.json());\n};\n\nconst findUserById = userId => {\n  return fetch(`${USER_URL}/userid/${userId}`).then(res => res.json());\n};\n\nconst register = credentials => {\n  console.log(\"user service register\");\n  return fetch(`${USER_URL}/register`, {\n    method: \"POST\",\n    credentials: \"include\",\n    body: JSON.stringify(credentials),\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(response => response.json());\n};\n\nconst findUsersByName = () => {};\n\nconst findUsersByKey = () => {};\n\nconst updateUser = (uid, user) => fetch(`${USER_URL}/userid/${uid}`, {\n  method: 'PUT',\n  credentials: 'same-origin',\n  body: JSON.stringify(user),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\n\nconst deleteUser = uid => fetch(`${USER_URL}/${uid}`, {\n  method: 'DELETE'\n}).then(response => response.json());\n\nconst createUser = () => {};\n\nexport default {\n  findAllUsers,\n  findUserById,\n  findUsersByName,\n  findUsersByKey,\n  updateUser,\n  deleteUser,\n  createUser,\n  register\n};","map":{"version":3,"sources":["/Users/meng/Development/Wbdv-21sp-Yixuan-s-Group-Final-Project/Search and Login Page/src/services/admin-service/user-service.js"],"names":["USER_URL","findAllUsers","fetch","then","res","json","findUserById","userId","register","credentials","console","log","method","body","JSON","stringify","headers","response","findUsersByName","findUsersByKey","updateUser","uid","user","deleteUser","createUser"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,iCAAjB;;AAEA,MAAMC,YAAY,GAAG,MAAI;AACrB,SAAOC,KAAK,CAACF,QAAD,CAAL,CAAgBG,IAAhB,CAAqBC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAA1B,CAAP;AACH,CAFD;;AAIA,MAAMC,YAAY,GAAIC,MAAD,IAAU;AAC3B,SAAOL,KAAK,CAAE,GAAEF,QAAS,WAAUO,MAAO,EAA9B,CAAL,CAAsCJ,IAAtC,CAA2CC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAhD,CAAP;AACH,CAFD;;AAIA,MAAMG,QAAQ,GAAIC,WAAD,IAAiB;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAOT,KAAK,CAAE,GAAEF,QAAS,WAAb,EAAyB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCH,IAAAA,WAAW,EAAE,SAFoB;AAGjCI,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAH2B;AAIjCO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAJwB,GAAzB,CAAL,CAQFb,IARE,CAQGc,QAAQ,IAAIA,QAAQ,CAACZ,IAAT,EARf,CAAP;AASH,CAXD;;AAcA,MAAMa,eAAe,GAAG,MAAI,CAAE,CAA9B;;AACA,MAAMC,cAAc,GAAG,MAAI,CAAE,CAA7B;;AAEA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,IAAN,KACfpB,KAAK,CAAE,GAAEF,QAAS,WAAUqB,GAAI,EAA3B,EAA8B;AAC/BT,EAAAA,MAAM,EAAE,KADuB;AAE/BH,EAAAA,WAAW,EAAE,aAFkB;AAG/BI,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,IAAf,CAHyB;AAI/BN,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AAJuB,CAA9B,CAAL,CAQKb,IARL,CAQUc,QAAQ,IAAIA,QAAQ,CAACZ,IAAT,EARtB,CADJ;;AAWA,MAAMkB,UAAU,GAAIF,GAAD,IACfnB,KAAK,CAAE,GAAEF,QAAS,IAAGqB,GAAI,EAApB,EAAuB;AACxBT,EAAAA,MAAM,EAAC;AADiB,CAAvB,CAAL,CAGKT,IAHL,CAGUc,QAAQ,IAAIA,QAAQ,CAACZ,IAAT,EAHtB,CADJ;;AAMA,MAAMmB,UAAU,GAAG,MAAI,CAAE,CAAzB;;AAGA,eAAe;AACXvB,EAAAA,YADW;AAEXK,EAAAA,YAFW;AAGXY,EAAAA,eAHW;AAIXC,EAAAA,cAJW;AAKXC,EAAAA,UALW;AAMXG,EAAAA,UANW;AAOXC,EAAAA,UAPW;AAQXhB,EAAAA;AARW,CAAf","sourcesContent":["// const USER_URL=\"https://petfinderserver.herokuapp.com/api/users\"\nconst USER_URL = \"http://localhost:8080/api/users\";\n\nconst findAllUsers = ()=>{\n    return fetch(USER_URL).then(res=>res.json())\n}\n\nconst findUserById = (userId)=>{\n    return fetch(`${USER_URL}/userid/${userId}`).then(res=>res.json())\n}\n\nconst register = (credentials) => {\n    console.log(\"user service register\")\n    return fetch(`${USER_URL}/register`, {\n        method: \"POST\",\n        credentials: \"include\",\n        body: JSON.stringify(credentials),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n}\n\n\nconst findUsersByName = ()=>{}\nconst findUsersByKey = ()=>{}\n\nconst updateUser = (uid, user) =>\n    fetch(`${USER_URL}/userid/${uid}`, {\n        method: 'PUT',\n        credentials: 'same-origin',\n        body: JSON.stringify(user),\n        headers:{\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst deleteUser = (uid) =>\n    fetch(`${USER_URL}/${uid}`, {\n        method:'DELETE',\n    })\n        .then(response => response.json())\n\nconst createUser = ()=>{}\n\n\nexport default {\n    findAllUsers,\n    findUserById,\n    findUsersByName,\n    findUsersByKey,\n    updateUser,\n    deleteUser,\n    createUser,\n    register\n}"]},"metadata":{},"sourceType":"module"}